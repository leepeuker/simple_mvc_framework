<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Models\User" namespace="Models" name="User" abstract="false" final="false" start="16" end="149">
  <file path="C:/xampp/htdocs/app/Models" file="User.php" realpath="C:/xampp/htdocs/app/Models/User.php" size="4299" time="2018-08-02T10:46:00+02:00" unixtime="1533199560" sha1="7e9f0160b041521bb04401cef5e0867fa886e3d5" relative="Models/User.php"/>
  <docblock>
    <description compact="User model">PHP version 7.0</description>
  </docblock>
  <extends full="Core\Model" namespace="Core" name="Model"/>
  <constructor name="__construct" start="25" end="31" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Class constructor"/>
      <param description="Data to insert or update a dataset (associative, key has to match column name)" type="array" variable="$data"/>
    </docblock>
    <parameter name="data" byreference="false" type="array" default=""/>
  </constructor>
  <method name="save" start="38" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Insert user into database"/>
      <return description="True if user was saved, false otherwise" type="boolean"/>
    </docblock>
  </method>
  <method name="findByEmail" start="63" end="74" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Find a user by email"/>
      <param type="string" variable="$email"/>
      <return description="User object if found, false otherwise" type="mixed"/>
    </docblock>
    <parameter name="email" byreference="false" type="{unknown}"/>
  </method>
  <method name="findByID" start="83" end="94" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Find a user by id"/>
      <param type="string" variable="$id"/>
      <return description="User object if found, false otherwise" type="mixed"/>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="rememberLogin" start="102" end="119" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Remember the login by inserting a new unique token into the remembered_logins table for this user record"/>
      <return description="True if the login was remembered successfully, false otherwise" type="boolean"/>
    </docblock>
  </method>
  <method name="validate" start="126" end="148" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Validate user data"/>
      <return description="True if validation succeded, false otherwise" type="boolean"/>
    </docblock>
  </method>
  <parent full="Core\Model" namespace="Core" name="Model">
    <method name="getDB" start="22" end="39" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Get the PDO User database connection"/>
        <param description="DB name" type="string"/>
        <return type="mixed"/>
      </docblock>
    </method>
    <method name="whereLike" start="47" end="50" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Convert searchterm for mysql &quot;where like&quot; query"/>
        <param description="String to convert" type="string" variable="$string"/>
        <return description="Converted string" type="string"/>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
    </method>
    <method name="escapeVar" start="58" end="61" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Escape variables which can not be prepared to prevent sql injections"/>
        <param description="String to ecscape" type="string" variable="$string"/>
        <return description="Ecscape string" type="string"/>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
    </method>
    <method name="validateSortOrder" start="69" end="72" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Validate sort order to prevent sql injections"/>
        <param description="String to validate" type="string" variable="$string"/>
        <return description="Validate string" type="string"/>
      </docblock>
      <parameter name="string" byreference="false" type="{unknown}"/>
    </method>
  </parent>
</class>
